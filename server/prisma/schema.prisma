generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  birthDay  DateTime
  role      String
  address   Address?
  Order     Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Seller {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  birthDay  DateTime
  role      String
  address   Address?
  Order     Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

model Address {
  id           Int      @id @default(autoincrement())
  street       String
  number       Int
  neighborhood String
  city         String
  state        String
  country      String
  zipCode      String
  user         User     @relation(fields: [userId], references: [id])
  userId       Int      @unique
  seller       Seller   @relation(fields: [sellerId], references: [id])
  sellerId     Int      @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
}

model Product {
  id            Int            @id @default(autoincrement())
  name          String         @unique
  description   String
  price         Float
  stock         Int
  image         String
  ProductOrder ProductOrder[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @default(now())
}

model Order {
  id            Int             @id @default(autoincrement())
  customer      User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  seller        Seller          @relation(fields: [sellerId], references: [id], onDelete: Cascade, onUpdate: Cascade)             
  userId        Int
  sellerId      Int             
  status        String
  total         Float
  orderDate     DateTime        @default(now())
  ProductOrder ProductOrder[]
}

model ProductOrder {
  orderId   Int
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  quantity  Int

  @@unique([orderId, productId])
}